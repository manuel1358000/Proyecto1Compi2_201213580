package Analizadores.GramaticaGDATO;
import java_cup.runtime.Symbol;
import java_cup.runtime.*;
import java.lang.*;
import javax.swing.JOptionPane;
import java.io.*;
import java.util.LinkedList;
import java.awt.Color;
import ArbolAST.AST;
import Auxiliares.Errores;
import ArbolAST.Componente.NodoGDATO;
import ArbolAST.Entorno.Type;
import ArbolAST.Expresiones.operacion.Aritmetica;
parser code
{:
    public LinkedList<Aritmetica> root=null;
    public static int index=0;
    public void syntax_error(Symbol s){
        System.out.println("Error sintactico en la linea "+(s.left+1)+" Columna "+s.right+". Identificador "+s.value+" no reconocido"); 
        //id,archivo,tipo,descripcion,acciones,linea,columna,aux
         Errores errores=new Errores("SINTACTICO","Error en el elemento "+s.value.toString(),s.left+1,s.right+1);
         proyecto1compi2_201213580.Proyecto1Compi2_201213580.errores_fs.add(errores);
    }
    /**Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores.*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        Errores errores=new Errores("SINTACTICO","Error en el elemento "+s.value.toString(),s.left+1,s.right+1);
        proyecto1compi2_201213580.Proyecto1Compi2_201213580.errores_fs.add(errores);
        javax.swing.JOptionPane.showMessageDialog(null,"Error Sintactico en la linea "+(s.right+1)+"Columna "+s.left+". Identificador"+s.value+" no reconocido.");
    }
:}
action code
{:  
:}

//DEFINICION DE SIMBOLOS DEL LENGUAJE FS
terminal String abre,cierra,principal,lista,div;
//DEFINICION VALORES IMPLICITOS LENGUAJE FS
terminal String valor_id,valor_numero_completo,valor_cadena;
terminal String valor_numero_decimal;




//definicion de no terminales
non terminal LinkedList<NodoGDATO> INICIAL;
non terminal LinkedList<Aritmetica> SENTENCIAS_GLOBALES;
non terminal LinkedList<Aritmetica> CONTENIDO_PRINCIPAL;
non terminal LinkedList<NodoGDATO> LISTA_ELEMENTOS;
non terminal NodoGDATO TIPO_DATO;

start with INICIAL;
INICIAL::= SENTENCIAS_GLOBALES:a{:
                                this.parser.root=a;
                               :};

SENTENCIAS_GLOBALES::=abre lista cierra CONTENIDO_PRINCIPAL:a abre div lista cierra{:
                                                                                    RESULT=a;
                                                                                   :};

CONTENIDO_PRINCIPAL::= CONTENIDO_PRINCIPAL:a abre principal cierra LISTA_ELEMENTOS:b abre div principal cierra{:
                                                                                                                 RESULT=a;
                                                                                                                RESULT.add(new Aritmetica(b,Type.PrimitiveType.GDATO,aleft+1,aright+1));
                                                                                                              :}
                     | abre principal cierra LISTA_ELEMENTOS:a abre div principal cierra{:
                                                                                            RESULT=new LinkedList<>();
                                                                                            RESULT.add(new Aritmetica(a, Type.PrimitiveType.GDATO, aright+1, aleft+1));
                                                                                        :};
LISTA_ELEMENTOS::= LISTA_ELEMENTOS:a abre valor_id:b cierra TIPO_DATO:c abre div valor_id cierra{:
                                                                                                    RESULT=a;
                                                                                                    c.setTipo(Type.PrimitiveType.GDATO);
                                                                                                    c.setEtiqueta(b.replaceAll("\"",""));
                                                                                                    RESULT.add(c);
                                                                                                :}
                 | abre valor_id:a cierra TIPO_DATO:b abre div valor_id cierra{:
                                                                                RESULT=new LinkedList<NodoGDATO>();
                                                                                b.setTipo(Type.PrimitiveType.GDATO);
                                                                                b.setEtiqueta(a.replaceAll("\"",""));
                                                                                RESULT.add(b);
                                                                              :};

TIPO_DATO::= valor_numero_completo:a{:RESULT=new NodoGDATO(Type.PrimitiveType.INTEGER,a.replaceAll("\"","").toLowerCase());:}
           | valor_numero_decimal:a{:RESULT=new NodoGDATO(Type.PrimitiveType.DOUBLE,a.replaceAll("\"","").toLowerCase());:}
           | valor_cadena:a{:RESULT=new NodoGDATO(Type.PrimitiveType.STRING,a.replaceAll("\"","").toLowerCase());:};